{"version":3,"sources":["C:/Users/User/Documents/Web Design/angular/githubscore/src async","C:/Users/User/Documents/Web Design/angular/githubscore/src/app/api.service.ts","C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.component.css","C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.component.html","C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.component.ts","C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.module.ts","C:/Users/User/Documents/Web Design/angular/githubscore/src/environments/environment.ts","C:/Users/User/Documents/Web Design/angular/githubscore/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/Documents/Web Design/angular/githubscore/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class ApiService {\n\n  constructor(private _http: Http) { }\n  retrieveUser(username){\n    console.log('service was called');\n    if (username) {\n      console.log('user exists');\n      return this._http.get('https://api.github.com/users/' + username)\n      .map(data => data.json())\n      .toPromise();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/app/api.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"col-md-10 col-md-offset-1 outline\\\">\\n    <h1>GitHub Score</h1>\\n    <form class=\\\"form-group col-md-6\\\" #form=\\\"ngForm\\\" (submit)=\\\"calculateScore(username)\\\">\\n        <label for=\\\"username\\\" class=\\\"col-md-4\\\">GitHub Username: </label>\\n        <input type=\\\"text\\\" class=\\\"col-md-8\\\" name=\\\"username\\\" required [(ngModel)]=\\\"username\\\">\\n      <button class=\\\"btn btn-default form-control\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Calculate my GitHub Score</button>\\n    </form>\\n    <div class=\\\"col-md-6 text-center\\\">\\n      <h3 *ngIf=\\\"userExists === false && form.submitted\\\" class=\\\"error\\\">User not found. Try a different username.</h3>\\n      <h1 *ngIf=\\\"userExists === true\\\">Your Score: {{score}}</h1>\\n      <h3 *ngIf=\\\"score < 20 && userExists\\\" class=\\\"error\\\">Needs Work!</h3>\\n      <h3 *ngIf=\\\"score > 20 && score < 50\\\" class=\\\"orange\\\">A decent start!</h3>\\n      <h3 *ngIf=\\\"score >= 50 && score < 100\\\">Doing good!</h3>\\n      <h3 *ngIf=\\\"score >= 100 && score < 200\\\" class=\\\"green\\\">Great job!</h3>\\n      <h3 *ngIf=\\\"score >= 200\\\" class=\\\"blue\\\">GitHub Elite!</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    {{user | json}}\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, ViewChild } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild('form') form: any;\n  user: any;\n  userExists;\n  promise;\n  score = null;\n  constructor(private _apiservice: ApiService){}\n\n  calculateScore(username){\n    console.log('step 1');\n    this.promise = this._apiservice.retrieveUser(username)\n    if (this.promise){\n      console.log('promise returned');\n      this.promise\n        .then((user) => {\n            this.userExists = true;\n            if (user.id){\n              this.score = user.public_repos + user.followers;\n              console.log(this.score);\n            }\n          })\n        .catch(() => {\n            this.userExists = false;\n        })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { ApiService } from './api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/Documents/Web Design/angular/githubscore/src/main.ts"],"sourceRoot":"webpack:///"}